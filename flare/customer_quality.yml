---
version: v1beta1
name: dataquality-sample-04
type: workflow
tags:
  - Metrics
  - Checks
description: The job performs metrics calculations and checks on product data
#owner: itspiyush
workflow:
  title: Metrics and checks
  dag:
    - name: dataquality-product-04
      title: Metrics and checks
      description: The job performs metrics calculations and checks on product data
      spec:
        stack: flare:3.0
        envs:
          SKIP_TOPOLOGY_REGISTRATION: "true"
        tags:
          - Metrics
        title: Metrics and checks
        description: The job performs metrics calculations and checks on product data
        flare:
          driver:
            coreLimit: 4000m
            cores: 2
            memory: 6144m
          executor:
            coreLimit: 6000m
            cores: 2
            instances: 3
            memory: 10000m
          job:
            explain: true
            logLevel: INFO
            #validate single input
            inputs:
              - name: input_df
                dataset: dataos://icebase:retail/product
                format: iceberg
            #override outputs, steps with specific template
            assertions:
              - column: sale_price
                tests:
                  - avg > 100
                  - max < 1000
                  - max > 100
                  - distinct_count > 10
                  - missing_count < 100
                  - missing_percentage < 0.5
              - column: sale_price
                filter: brand_name == 'Ames Walker'
                tests:
                  - avg > 500
              - column: product_name
                validFormat:
                  regex: Western Cowboy
                  #type: email
                tests:
                  - invalid_count < 5
                  - invalid_percentage < 0.1
              - sql: |
                  SELECT
                    AVG(sale_price) AS avg_sale_price,
                    MAX(sale_price) AS max_sale_price
                  FROM input_df
                  WHERE brand_name = 'Ames Walker'
                tests:
                  - avg_sale_price > 100
                  - max_sale_price < 1000
          sparkConf:
            - spark.serializer: org.apache.spark.serializer.KryoSerializer
            - spark.sql.shuffle.partitions: "10"
            - spark.memory.storageFraction: "0.1"
            - spark.memory.fraction: "0.1"
            - spark.shuffle.memoryFraction: "0.2"